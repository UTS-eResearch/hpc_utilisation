# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_pbs')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_pbs')
    _pbs = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_pbs', [dirname(__file__)])
        except ImportError:
            import _pbs
            return _pbs
        try:
            _mod = imp.load_module('_pbs', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _pbs = swig_import_helper()
    del swig_import_helper
else:
    import _pbs
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except __builtin__.Exception:
    class _object:
        pass
    _newclass = 0

TYPE_ATTR_READONLY = _pbs.TYPE_ATTR_READONLY
TYPE_ATTR_PUBLIC = _pbs.TYPE_ATTR_PUBLIC
TYPE_ATTR_INVISIBLE = _pbs.TYPE_ATTR_INVISIBLE
TYPE_ATTR_ALL = _pbs.TYPE_ATTR_ALL
ATTR_a = _pbs.ATTR_a
ATTR_c = _pbs.ATTR_c
ATTR_e = _pbs.ATTR_e
ATTR_g = _pbs.ATTR_g
ATTR_h = _pbs.ATTR_h
ATTR_j = _pbs.ATTR_j
ATTR_J = _pbs.ATTR_J
ATTR_k = _pbs.ATTR_k
ATTR_l = _pbs.ATTR_l
ATTR_l_orig = _pbs.ATTR_l_orig
ATTR_l_acct = _pbs.ATTR_l_acct
ATTR_m = _pbs.ATTR_m
ATTR_o = _pbs.ATTR_o
ATTR_p = _pbs.ATTR_p
ATTR_q = _pbs.ATTR_q
ATTR_R = _pbs.ATTR_R
ATTR_r = _pbs.ATTR_r
ATTR_u = _pbs.ATTR_u
ATTR_v = _pbs.ATTR_v
ATTR_A = _pbs.ATTR_A
ATTR_M = _pbs.ATTR_M
ATTR_N = _pbs.ATTR_N
ATTR_S = _pbs.ATTR_S
ATTR_array_indices_submitted = _pbs.ATTR_array_indices_submitted
ATTR_depend = _pbs.ATTR_depend
ATTR_inter = _pbs.ATTR_inter
ATTR_sandbox = _pbs.ATTR_sandbox
ATTR_stagein = _pbs.ATTR_stagein
ATTR_stageout = _pbs.ATTR_stageout
ATTR_resvTag = _pbs.ATTR_resvTag
ATTR_resv_start = _pbs.ATTR_resv_start
ATTR_resv_end = _pbs.ATTR_resv_end
ATTR_resv_duration = _pbs.ATTR_resv_duration
ATTR_resv_state = _pbs.ATTR_resv_state
ATTR_resv_substate = _pbs.ATTR_resv_substate
ATTR_resv_job = _pbs.ATTR_resv_job
ATTR_auth_u = _pbs.ATTR_auth_u
ATTR_auth_g = _pbs.ATTR_auth_g
ATTR_auth_h = _pbs.ATTR_auth_h
ATTR_cred = _pbs.ATTR_cred
ATTR_nodemux = _pbs.ATTR_nodemux
ATTR_umask = _pbs.ATTR_umask
ATTR_block = _pbs.ATTR_block
ATTR_convert = _pbs.ATTR_convert
ATTR_DefaultChunk = _pbs.ATTR_DefaultChunk
ATTR_X11_cookie = _pbs.ATTR_X11_cookie
ATTR_X11_port = _pbs.ATTR_X11_port
ATTR_GUI = _pbs.ATTR_GUI
ATTR_max_run_subjobs = _pbs.ATTR_max_run_subjobs
ATTR_resv_standing = _pbs.ATTR_resv_standing
ATTR_resv_count = _pbs.ATTR_resv_count
ATTR_resv_idx = _pbs.ATTR_resv_idx
ATTR_resv_rrule = _pbs.ATTR_resv_rrule
ATTR_resv_execvnodes = _pbs.ATTR_resv_execvnodes
ATTR_resv_timezone = _pbs.ATTR_resv_timezone
ATTR_ctime = _pbs.ATTR_ctime
ATTR_estimated = _pbs.ATTR_estimated
ATTR_exechost = _pbs.ATTR_exechost
ATTR_exechost_acct = _pbs.ATTR_exechost_acct
ATTR_exechost_orig = _pbs.ATTR_exechost_orig
ATTR_exechost2 = _pbs.ATTR_exechost2
ATTR_execvnode = _pbs.ATTR_execvnode
ATTR_execvnode_acct = _pbs.ATTR_execvnode_acct
ATTR_execvnode_deallocated = _pbs.ATTR_execvnode_deallocated
ATTR_execvnode_orig = _pbs.ATTR_execvnode_orig
ATTR_resv_nodes = _pbs.ATTR_resv_nodes
ATTR_mtime = _pbs.ATTR_mtime
ATTR_qtime = _pbs.ATTR_qtime
ATTR_session = _pbs.ATTR_session
ATTR_jobdir = _pbs.ATTR_jobdir
ATTR_euser = _pbs.ATTR_euser
ATTR_egroup = _pbs.ATTR_egroup
ATTR_project = _pbs.ATTR_project
ATTR_hashname = _pbs.ATTR_hashname
ATTR_hopcount = _pbs.ATTR_hopcount
ATTR_security = _pbs.ATTR_security
ATTR_sched_hint = _pbs.ATTR_sched_hint
ATTR_SchedSelect = _pbs.ATTR_SchedSelect
ATTR_SchedSelect_orig = _pbs.ATTR_SchedSelect_orig
ATTR_substate = _pbs.ATTR_substate
ATTR_name = _pbs.ATTR_name
ATTR_owner = _pbs.ATTR_owner
ATTR_used = _pbs.ATTR_used
ATTR_used_acct = _pbs.ATTR_used_acct
ATTR_used_update = _pbs.ATTR_used_update
ATTR_relnodes_on_stageout = _pbs.ATTR_relnodes_on_stageout
ATTR_tolerate_node_failures = _pbs.ATTR_tolerate_node_failures
ATTR_released = _pbs.ATTR_released
ATTR_rel_list = _pbs.ATTR_rel_list
ATTR_state = _pbs.ATTR_state
ATTR_queue = _pbs.ATTR_queue
ATTR_server = _pbs.ATTR_server
ATTR_maxrun = _pbs.ATTR_maxrun
ATTR_max_run = _pbs.ATTR_max_run
ATTR_max_run_res = _pbs.ATTR_max_run_res
ATTR_max_run_soft = _pbs.ATTR_max_run_soft
ATTR_max_run_res_soft = _pbs.ATTR_max_run_res_soft
ATTR_total = _pbs.ATTR_total
ATTR_comment = _pbs.ATTR_comment
ATTR_cookie = _pbs.ATTR_cookie
ATTR_qrank = _pbs.ATTR_qrank
ATTR_altid = _pbs.ATTR_altid
ATTR_altid2 = _pbs.ATTR_altid2
ATTR_acct_id = _pbs.ATTR_acct_id
ATTR_array = _pbs.ATTR_array
ATTR_array_id = _pbs.ATTR_array_id
ATTR_array_index = _pbs.ATTR_array_index
ATTR_array_state_count = _pbs.ATTR_array_state_count
ATTR_array_indices_remaining = _pbs.ATTR_array_indices_remaining
ATTR_etime = _pbs.ATTR_etime
ATTR_gridname = _pbs.ATTR_gridname
ATTR_refresh = _pbs.ATTR_refresh
ATTR_ReqCredEnable = _pbs.ATTR_ReqCredEnable
ATTR_ReqCred = _pbs.ATTR_ReqCred
ATTR_runcount = _pbs.ATTR_runcount
ATTR_run_version = _pbs.ATTR_run_version
ATTR_stime = _pbs.ATTR_stime
ATTR_pset = _pbs.ATTR_pset
ATTR_executable = _pbs.ATTR_executable
ATTR_Arglist = _pbs.ATTR_Arglist
ATTR_version = _pbs.ATTR_version
ATTR_eligible_time = _pbs.ATTR_eligible_time
ATTR_accrue_type = _pbs.ATTR_accrue_type
ATTR_sample_starttime = _pbs.ATTR_sample_starttime
ATTR_job_kill_delay = _pbs.ATTR_job_kill_delay
ATTR_topjob_ineligible = _pbs.ATTR_topjob_ineligible
ATTR_submit_host = _pbs.ATTR_submit_host
ATTR_cred_id = _pbs.ATTR_cred_id
ATTR_security_context = _pbs.ATTR_security_context
ATTR_cred_validity = _pbs.ATTR_cred_validity
ATTR_history_timestamp = _pbs.ATTR_history_timestamp
ATTR_create_resv_from_job = _pbs.ATTR_create_resv_from_job
ATTR_stageout_status = _pbs.ATTR_stageout_status
ATTR_exit_status = _pbs.ATTR_exit_status
ATTR_submit_arguments = _pbs.ATTR_submit_arguments
ATTR_resv_name = _pbs.ATTR_resv_name
ATTR_resv_owner = _pbs.ATTR_resv_owner
ATTR_resv_type = _pbs.ATTR_resv_type
ATTR_resv_Tag = _pbs.ATTR_resv_Tag
ATTR_resv_ID = _pbs.ATTR_resv_ID
ATTR_resv_retry = _pbs.ATTR_resv_retry
ATTR_del_idle_time = _pbs.ATTR_del_idle_time
ATTR_aclgren = _pbs.ATTR_aclgren
ATTR_aclgroup = _pbs.ATTR_aclgroup
ATTR_aclhten = _pbs.ATTR_aclhten
ATTR_aclhost = _pbs.ATTR_aclhost
ATTR_aclhostmomsen = _pbs.ATTR_aclhostmomsen
ATTR_acluren = _pbs.ATTR_acluren
ATTR_acluser = _pbs.ATTR_acluser
ATTR_altrouter = _pbs.ATTR_altrouter
ATTR_chkptmin = _pbs.ATTR_chkptmin
ATTR_enable = _pbs.ATTR_enable
ATTR_fromroute = _pbs.ATTR_fromroute
ATTR_HasNodes = _pbs.ATTR_HasNodes
ATTR_killdelay = _pbs.ATTR_killdelay
ATTR_maxgrprun = _pbs.ATTR_maxgrprun
ATTR_maxgrprunsoft = _pbs.ATTR_maxgrprunsoft
ATTR_maxque = _pbs.ATTR_maxque
ATTR_max_queued = _pbs.ATTR_max_queued
ATTR_max_queued_res = _pbs.ATTR_max_queued_res
ATTR_queued_jobs_threshold = _pbs.ATTR_queued_jobs_threshold
ATTR_queued_jobs_threshold_res = _pbs.ATTR_queued_jobs_threshold_res
ATTR_maxuserrun = _pbs.ATTR_maxuserrun
ATTR_maxuserrunsoft = _pbs.ATTR_maxuserrunsoft
ATTR_qtype = _pbs.ATTR_qtype
ATTR_rescassn = _pbs.ATTR_rescassn
ATTR_rescdflt = _pbs.ATTR_rescdflt
ATTR_rescmax = _pbs.ATTR_rescmax
ATTR_rescmin = _pbs.ATTR_rescmin
ATTR_rndzretry = _pbs.ATTR_rndzretry
ATTR_routedest = _pbs.ATTR_routedest
ATTR_routeheld = _pbs.ATTR_routeheld
ATTR_routewait = _pbs.ATTR_routewait
ATTR_routeretry = _pbs.ATTR_routeretry
ATTR_routelife = _pbs.ATTR_routelife
ATTR_rsvexpdt = _pbs.ATTR_rsvexpdt
ATTR_rsvsync = _pbs.ATTR_rsvsync
ATTR_start = _pbs.ATTR_start
ATTR_count = _pbs.ATTR_count
ATTR_number = _pbs.ATTR_number
ATTR_jobscript_max_size = _pbs.ATTR_jobscript_max_size
ATTR_SvrHost = _pbs.ATTR_SvrHost
ATTR_aclroot = _pbs.ATTR_aclroot
ATTR_managers = _pbs.ATTR_managers
ATTR_dfltque = _pbs.ATTR_dfltque
ATTR_defnode = _pbs.ATTR_defnode
ATTR_locsvrs = _pbs.ATTR_locsvrs
ATTR_logevents = _pbs.ATTR_logevents
ATTR_logfile = _pbs.ATTR_logfile
ATTR_mailfrom = _pbs.ATTR_mailfrom
ATTR_nodepack = _pbs.ATTR_nodepack
ATTR_nodefailrq = _pbs.ATTR_nodefailrq
ATTR_operators = _pbs.ATTR_operators
ATTR_queryother = _pbs.ATTR_queryother
ATTR_resccost = _pbs.ATTR_resccost
ATTR_rescavail = _pbs.ATTR_rescavail
ATTR_maxuserres = _pbs.ATTR_maxuserres
ATTR_maxuserressoft = _pbs.ATTR_maxuserressoft
ATTR_maxgroupres = _pbs.ATTR_maxgroupres
ATTR_maxgroupressoft = _pbs.ATTR_maxgroupressoft
ATTR_maxarraysize = _pbs.ATTR_maxarraysize
ATTR_PNames = _pbs.ATTR_PNames
ATTR_schediteration = _pbs.ATTR_schediteration
ATTR_scheduling = _pbs.ATTR_scheduling
ATTR_status = _pbs.ATTR_status
ATTR_syscost = _pbs.ATTR_syscost
ATTR_FlatUID = _pbs.ATTR_FlatUID
ATTR_FLicenses = _pbs.ATTR_FLicenses
ATTR_ResvEnable = _pbs.ATTR_ResvEnable
ATTR_aclResvgren = _pbs.ATTR_aclResvgren
ATTR_aclResvgroup = _pbs.ATTR_aclResvgroup
ATTR_aclResvhten = _pbs.ATTR_aclResvhten
ATTR_aclResvhost = _pbs.ATTR_aclResvhost
ATTR_aclResvuren = _pbs.ATTR_aclResvuren
ATTR_aclResvuser = _pbs.ATTR_aclResvuser
ATTR_NodeGroupEnable = _pbs.ATTR_NodeGroupEnable
ATTR_NodeGroupKey = _pbs.ATTR_NodeGroupKey
ATTR_dfltqdelargs = _pbs.ATTR_dfltqdelargs
ATTR_dfltqsubargs = _pbs.ATTR_dfltqsubargs
ATTR_rpp_retry = _pbs.ATTR_rpp_retry
ATTR_rpp_highwater = _pbs.ATTR_rpp_highwater
ATTR_pbs_license_info = _pbs.ATTR_pbs_license_info
ATTR_license_min = _pbs.ATTR_license_min
ATTR_license_max = _pbs.ATTR_license_max
ATTR_license_linger = _pbs.ATTR_license_linger
ATTR_license_count = _pbs.ATTR_license_count
ATTR_job_sort_formula = _pbs.ATTR_job_sort_formula
ATTR_EligibleTimeEnable = _pbs.ATTR_EligibleTimeEnable
ATTR_resv_retry_time = _pbs.ATTR_resv_retry_time
ATTR_resv_retry_init = _pbs.ATTR_resv_retry_init
ATTR_JobHistoryEnable = _pbs.ATTR_JobHistoryEnable
ATTR_JobHistoryDuration = _pbs.ATTR_JobHistoryDuration
ATTR_max_concurrent_prov = _pbs.ATTR_max_concurrent_prov
ATTR_resv_post_processing = _pbs.ATTR_resv_post_processing
ATTR_backfill_depth = _pbs.ATTR_backfill_depth
ATTR_job_requeue_timeout = _pbs.ATTR_job_requeue_timeout
ATTR_show_hidden_attribs = _pbs.ATTR_show_hidden_attribs
ATTR_python_restart_max_hooks = _pbs.ATTR_python_restart_max_hooks
ATTR_python_restart_max_objects = _pbs.ATTR_python_restart_max_objects
ATTR_python_restart_min_interval = _pbs.ATTR_python_restart_min_interval
ATTR_power_provisioning = _pbs.ATTR_power_provisioning
ATTR_sync_mom_hookfiles_timeout = _pbs.ATTR_sync_mom_hookfiles_timeout
ATTR_max_job_sequence_id = _pbs.ATTR_max_job_sequence_id
ATTR_acl_krb_realm_enable = _pbs.ATTR_acl_krb_realm_enable
ATTR_acl_krb_realms = _pbs.ATTR_acl_krb_realms
ATTR_acl_krb_submit_realms = _pbs.ATTR_acl_krb_submit_realms
ATTR_cred_renew_enable = _pbs.ATTR_cred_renew_enable
ATTR_cred_renew_tool = _pbs.ATTR_cred_renew_tool
ATTR_cred_renew_period = _pbs.ATTR_cred_renew_period
ATTR_cred_renew_cache_period = _pbs.ATTR_cred_renew_cache_period
ATTR_rpp_max_pkt_check = _pbs.ATTR_rpp_max_pkt_check
ATTR_SchedHost = _pbs.ATTR_SchedHost
ATTR_sched_cycle_len = _pbs.ATTR_sched_cycle_len
ATTR_do_not_span_psets = _pbs.ATTR_do_not_span_psets
ATTR_only_explicit_psets = _pbs.ATTR_only_explicit_psets
ATTR_sched_preempt_enforce_resumption = _pbs.ATTR_sched_preempt_enforce_resumption
ATTR_preempt_targets_enable = _pbs.ATTR_preempt_targets_enable
ATTR_job_sort_formula_threshold = _pbs.ATTR_job_sort_formula_threshold
ATTR_throughput_mode = _pbs.ATTR_throughput_mode
ATTR_opt_backfill_fuzzy = _pbs.ATTR_opt_backfill_fuzzy
ATTR_sched_port = _pbs.ATTR_sched_port
ATTR_partition = _pbs.ATTR_partition
ATTR_sched_priv = _pbs.ATTR_sched_priv
ATTR_sched_log = _pbs.ATTR_sched_log
ATTR_sched_user = _pbs.ATTR_sched_user
ATTR_sched_state = _pbs.ATTR_sched_state
ATTR_sched_preempt_queue_prio = _pbs.ATTR_sched_preempt_queue_prio
ATTR_sched_preempt_prio = _pbs.ATTR_sched_preempt_prio
ATTR_sched_preempt_order = _pbs.ATTR_sched_preempt_order
ATTR_sched_preempt_sort = _pbs.ATTR_sched_preempt_sort
ATTR_sched_server_dyn_res_alarm = _pbs.ATTR_sched_server_dyn_res_alarm
ATTR_NODE_Host = _pbs.ATTR_NODE_Host
ATTR_NODE_Mom = _pbs.ATTR_NODE_Mom
ATTR_NODE_Port = _pbs.ATTR_NODE_Port
ATTR_NODE_state = _pbs.ATTR_NODE_state
ATTR_NODE_ntype = _pbs.ATTR_NODE_ntype
ATTR_NODE_jobs = _pbs.ATTR_NODE_jobs
ATTR_NODE_resvs = _pbs.ATTR_NODE_resvs
ATTR_NODE_resv_enable = _pbs.ATTR_NODE_resv_enable
ATTR_NODE_np = _pbs.ATTR_NODE_np
ATTR_NODE_pcpus = _pbs.ATTR_NODE_pcpus
ATTR_NODE_properties = _pbs.ATTR_NODE_properties
ATTR_NODE_NoMultiNode = _pbs.ATTR_NODE_NoMultiNode
ATTR_NODE_No_Tasks = _pbs.ATTR_NODE_No_Tasks
ATTR_NODE_Sharing = _pbs.ATTR_NODE_Sharing
ATTR_NODE_ProvisionEnable = _pbs.ATTR_NODE_ProvisionEnable
ATTR_NODE_current_aoe = _pbs.ATTR_NODE_current_aoe
ATTR_NODE_in_multivnode_host = _pbs.ATTR_NODE_in_multivnode_host
ATTR_NODE_License = _pbs.ATTR_NODE_License
ATTR_NODE_LicenseInfo = _pbs.ATTR_NODE_LicenseInfo
ATTR_NODE_TopologyInfo = _pbs.ATTR_NODE_TopologyInfo
ATTR_NODE_MaintJobs = _pbs.ATTR_NODE_MaintJobs
ATTR_NODE_VnodePool = _pbs.ATTR_NODE_VnodePool
ATTR_NODE_current_eoe = _pbs.ATTR_NODE_current_eoe
ATTR_NODE_power_provisioning = _pbs.ATTR_NODE_power_provisioning
ATTR_NODE_poweroff_eligible = _pbs.ATTR_NODE_poweroff_eligible
ATTR_NODE_last_state_change_time = _pbs.ATTR_NODE_last_state_change_time
ATTR_NODE_last_used_time = _pbs.ATTR_NODE_last_used_time
ND_RESC_LicSignature = _pbs.ND_RESC_LicSignature
ATTR_RESC_TYPE = _pbs.ATTR_RESC_TYPE
ATTR_RESC_FLAG = _pbs.ATTR_RESC_FLAG
CHECKPOINT_UNSPECIFIED = _pbs.CHECKPOINT_UNSPECIFIED
NO_HOLD = _pbs.NO_HOLD
NO_JOIN = _pbs.NO_JOIN
NO_KEEP = _pbs.NO_KEEP
MAIL_AT_ABORT = _pbs.MAIL_AT_ABORT
USER_HOLD = _pbs.USER_HOLD
OTHER_HOLD = _pbs.OTHER_HOLD
SYSTEM_HOLD = _pbs.SYSTEM_HOLD
BAD_PASSWORD_HOLD = _pbs.BAD_PASSWORD_HOLD
MGR_CMD_NONE = _pbs.MGR_CMD_NONE
MGR_CMD_CREATE = _pbs.MGR_CMD_CREATE
MGR_CMD_DELETE = _pbs.MGR_CMD_DELETE
MGR_CMD_SET = _pbs.MGR_CMD_SET
MGR_CMD_UNSET = _pbs.MGR_CMD_UNSET
MGR_CMD_LIST = _pbs.MGR_CMD_LIST
MGR_CMD_PRINT = _pbs.MGR_CMD_PRINT
MGR_CMD_ACTIVE = _pbs.MGR_CMD_ACTIVE
MGR_CMD_IMPORT = _pbs.MGR_CMD_IMPORT
MGR_CMD_EXPORT = _pbs.MGR_CMD_EXPORT
MGR_CMD_LAST = _pbs.MGR_CMD_LAST
MGR_OBJ_NONE = _pbs.MGR_OBJ_NONE
MGR_OBJ_SERVER = _pbs.MGR_OBJ_SERVER
MGR_OBJ_QUEUE = _pbs.MGR_OBJ_QUEUE
MGR_OBJ_JOB = _pbs.MGR_OBJ_JOB
MGR_OBJ_NODE = _pbs.MGR_OBJ_NODE
MGR_OBJ_RESV = _pbs.MGR_OBJ_RESV
MGR_OBJ_RSC = _pbs.MGR_OBJ_RSC
MGR_OBJ_SCHED = _pbs.MGR_OBJ_SCHED
MGR_OBJ_HOST = _pbs.MGR_OBJ_HOST
MGR_OBJ_HOOK = _pbs.MGR_OBJ_HOOK
MGR_OBJ_PBS_HOOK = _pbs.MGR_OBJ_PBS_HOOK
MGR_OBJ_LAST = _pbs.MGR_OBJ_LAST
SITE_HOOK = _pbs.SITE_HOOK
PBS_HOOK = _pbs.PBS_HOOK
MSG_OUT = _pbs.MSG_OUT
MSG_ERR = _pbs.MSG_ERR
BLUEGENE = _pbs.BLUEGENE
PBS_MAXHOSTNAME = _pbs.PBS_MAXHOSTNAME
MAXPATHLEN = _pbs.MAXPATHLEN
MAXNAMLEN = _pbs.MAXNAMLEN
PBS_MAXSCHEDNAME = _pbs.PBS_MAXSCHEDNAME
PBS_MAXUSER = _pbs.PBS_MAXUSER
PBS_MAXPWLEN = _pbs.PBS_MAXPWLEN
PBS_MAXGRPN = _pbs.PBS_MAXGRPN
PBS_MAXQUEUENAME = _pbs.PBS_MAXQUEUENAME
PBS_MAXJOBNAME = _pbs.PBS_MAXJOBNAME
PBS_MAXSERVERNAME = _pbs.PBS_MAXSERVERNAME
PBS_MAXSEQNUM = _pbs.PBS_MAXSEQNUM
PBS_DFLT_MAX_JOB_SEQUENCE_ID = _pbs.PBS_DFLT_MAX_JOB_SEQUENCE_ID
PBS_MAXPORTNUM = _pbs.PBS_MAXPORTNUM
PBS_MAXSVRJOBID = _pbs.PBS_MAXSVRJOBID
PBS_MAXSVRRESVID = _pbs.PBS_MAXSVRRESVID
PBS_MAXQRESVNAME = _pbs.PBS_MAXQRESVNAME
PBS_MAXCLTJOBID = _pbs.PBS_MAXCLTJOBID
PBS_MAXDEST = _pbs.PBS_MAXDEST
PBS_MAXROUTEDEST = _pbs.PBS_MAXROUTEDEST
PBS_INTERACTIVE = _pbs.PBS_INTERACTIVE
PBS_TERM_BUF_SZ = _pbs.PBS_TERM_BUF_SZ
PBS_TERM_CCA = _pbs.PBS_TERM_CCA
PBS_RESV_ID_CHAR = _pbs.PBS_RESV_ID_CHAR
PBS_STDNG_RESV_ID_CHAR = _pbs.PBS_STDNG_RESV_ID_CHAR
PBS_MNTNC_RESV_ID_CHAR = _pbs.PBS_MNTNC_RESV_ID_CHAR
PBS_AUTH_KEY_LEN = _pbs.PBS_AUTH_KEY_LEN
SET = _pbs.SET
UNSET = _pbs.UNSET
INCR = _pbs.INCR
DECR = _pbs.DECR
EQ = _pbs.EQ
NE = _pbs.NE
GE = _pbs.GE
GT = _pbs.GT
LE = _pbs.LE
LT = _pbs.LT
DFLT = _pbs.DFLT
SHUT_IMMEDIATE = _pbs.SHUT_IMMEDIATE
SHUT_DELAY = _pbs.SHUT_DELAY
SHUT_QUICK = _pbs.SHUT_QUICK
FORCE = _pbs.FORCE
NOMAIL = _pbs.NOMAIL
SUPPRESS_EMAIL = _pbs.SUPPRESS_EMAIL
DELETEHISTORY = _pbs.DELETEHISTORY
class attrl(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, attrl, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, attrl, name)
    __repr__ = _swig_repr
    __swig_setmethods__["next"] = _pbs.attrl_next_set
    __swig_getmethods__["next"] = _pbs.attrl_next_get
    if _newclass:
        next = _swig_property(_pbs.attrl_next_get, _pbs.attrl_next_set)
    __swig_setmethods__["name"] = _pbs.attrl_name_set
    __swig_getmethods__["name"] = _pbs.attrl_name_get
    if _newclass:
        name = _swig_property(_pbs.attrl_name_get, _pbs.attrl_name_set)
    __swig_setmethods__["resource"] = _pbs.attrl_resource_set
    __swig_getmethods__["resource"] = _pbs.attrl_resource_get
    if _newclass:
        resource = _swig_property(_pbs.attrl_resource_get, _pbs.attrl_resource_set)
    __swig_setmethods__["value"] = _pbs.attrl_value_set
    __swig_getmethods__["value"] = _pbs.attrl_value_get
    if _newclass:
        value = _swig_property(_pbs.attrl_value_get, _pbs.attrl_value_set)
    __swig_setmethods__["op"] = _pbs.attrl_op_set
    __swig_getmethods__["op"] = _pbs.attrl_op_get
    if _newclass:
        op = _swig_property(_pbs.attrl_op_get, _pbs.attrl_op_set)

    def __init__(self):
        this = _pbs.new_attrl()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pbs.delete_attrl
    __del__ = lambda self: None
attrl_swigregister = _pbs.attrl_swigregister
attrl_swigregister(attrl)

class attropl(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, attropl, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, attropl, name)
    __repr__ = _swig_repr
    __swig_setmethods__["next"] = _pbs.attropl_next_set
    __swig_getmethods__["next"] = _pbs.attropl_next_get
    if _newclass:
        next = _swig_property(_pbs.attropl_next_get, _pbs.attropl_next_set)
    __swig_setmethods__["name"] = _pbs.attropl_name_set
    __swig_getmethods__["name"] = _pbs.attropl_name_get
    if _newclass:
        name = _swig_property(_pbs.attropl_name_get, _pbs.attropl_name_set)
    __swig_setmethods__["resource"] = _pbs.attropl_resource_set
    __swig_getmethods__["resource"] = _pbs.attropl_resource_get
    if _newclass:
        resource = _swig_property(_pbs.attropl_resource_get, _pbs.attropl_resource_set)
    __swig_setmethods__["value"] = _pbs.attropl_value_set
    __swig_getmethods__["value"] = _pbs.attropl_value_get
    if _newclass:
        value = _swig_property(_pbs.attropl_value_get, _pbs.attropl_value_set)
    __swig_setmethods__["op"] = _pbs.attropl_op_set
    __swig_getmethods__["op"] = _pbs.attropl_op_get
    if _newclass:
        op = _swig_property(_pbs.attropl_op_get, _pbs.attropl_op_set)

    def __init__(self):
        this = _pbs.new_attropl()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pbs.delete_attropl
    __del__ = lambda self: None
attropl_swigregister = _pbs.attropl_swigregister
attropl_swigregister(attropl)

class batch_status(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, batch_status, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, batch_status, name)
    __repr__ = _swig_repr
    __swig_setmethods__["next"] = _pbs.batch_status_next_set
    __swig_getmethods__["next"] = _pbs.batch_status_next_get
    if _newclass:
        next = _swig_property(_pbs.batch_status_next_get, _pbs.batch_status_next_set)
    __swig_setmethods__["name"] = _pbs.batch_status_name_set
    __swig_getmethods__["name"] = _pbs.batch_status_name_get
    if _newclass:
        name = _swig_property(_pbs.batch_status_name_get, _pbs.batch_status_name_set)
    __swig_setmethods__["attribs"] = _pbs.batch_status_attribs_set
    __swig_getmethods__["attribs"] = _pbs.batch_status_attribs_get
    if _newclass:
        attribs = _swig_property(_pbs.batch_status_attribs_get, _pbs.batch_status_attribs_set)
    __swig_setmethods__["text"] = _pbs.batch_status_text_set
    __swig_getmethods__["text"] = _pbs.batch_status_text_get
    if _newclass:
        text = _swig_property(_pbs.batch_status_text_get, _pbs.batch_status_text_set)

    def __init__(self):
        this = _pbs.new_batch_status()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pbs.delete_batch_status
    __del__ = lambda self: None
batch_status_swigregister = _pbs.batch_status_swigregister
batch_status_swigregister(batch_status)

class ecl_attrerr(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ecl_attrerr, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ecl_attrerr, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ecl_attribute"] = _pbs.ecl_attrerr_ecl_attribute_set
    __swig_getmethods__["ecl_attribute"] = _pbs.ecl_attrerr_ecl_attribute_get
    if _newclass:
        ecl_attribute = _swig_property(_pbs.ecl_attrerr_ecl_attribute_get, _pbs.ecl_attrerr_ecl_attribute_set)
    __swig_setmethods__["ecl_errcode"] = _pbs.ecl_attrerr_ecl_errcode_set
    __swig_getmethods__["ecl_errcode"] = _pbs.ecl_attrerr_ecl_errcode_get
    if _newclass:
        ecl_errcode = _swig_property(_pbs.ecl_attrerr_ecl_errcode_get, _pbs.ecl_attrerr_ecl_errcode_set)
    __swig_setmethods__["ecl_errmsg"] = _pbs.ecl_attrerr_ecl_errmsg_set
    __swig_getmethods__["ecl_errmsg"] = _pbs.ecl_attrerr_ecl_errmsg_get
    if _newclass:
        ecl_errmsg = _swig_property(_pbs.ecl_attrerr_ecl_errmsg_get, _pbs.ecl_attrerr_ecl_errmsg_set)

    def __init__(self):
        this = _pbs.new_ecl_attrerr()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pbs.delete_ecl_attrerr
    __del__ = lambda self: None
ecl_attrerr_swigregister = _pbs.ecl_attrerr_swigregister
ecl_attrerr_swigregister(ecl_attrerr)

class ecl_attribute_errors(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ecl_attribute_errors, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ecl_attribute_errors, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ecl_numerrors"] = _pbs.ecl_attribute_errors_ecl_numerrors_set
    __swig_getmethods__["ecl_numerrors"] = _pbs.ecl_attribute_errors_ecl_numerrors_get
    if _newclass:
        ecl_numerrors = _swig_property(_pbs.ecl_attribute_errors_ecl_numerrors_get, _pbs.ecl_attribute_errors_ecl_numerrors_set)
    __swig_setmethods__["ecl_attrerr"] = _pbs.ecl_attribute_errors_ecl_attrerr_set
    __swig_getmethods__["ecl_attrerr"] = _pbs.ecl_attribute_errors_ecl_attrerr_get
    if _newclass:
        ecl_attrerr = _swig_property(_pbs.ecl_attribute_errors_ecl_attrerr_get, _pbs.ecl_attribute_errors_ecl_attrerr_set)

    def __init__(self):
        this = _pbs.new_ecl_attribute_errors()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pbs.delete_ecl_attribute_errors
    __del__ = lambda self: None
ecl_attribute_errors_swigregister = _pbs.ecl_attribute_errors_swigregister
ecl_attribute_errors_swigregister(ecl_attribute_errors)

PREEMPT_METHOD_LOW = _pbs.PREEMPT_METHOD_LOW
PREEMPT_METHOD_SUSPEND = _pbs.PREEMPT_METHOD_SUSPEND
PREEMPT_METHOD_CHECKPOINT = _pbs.PREEMPT_METHOD_CHECKPOINT
PREEMPT_METHOD_REQUEUE = _pbs.PREEMPT_METHOD_REQUEUE
PREEMPT_METHOD_DELETE = _pbs.PREEMPT_METHOD_DELETE
PREEMPT_METHOD_HIGH = _pbs.PREEMPT_METHOD_HIGH
class preempt_job_info(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, preempt_job_info, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, preempt_job_info, name)
    __repr__ = _swig_repr
    __swig_setmethods__["job_id"] = _pbs.preempt_job_info_job_id_set
    __swig_getmethods__["job_id"] = _pbs.preempt_job_info_job_id_get
    if _newclass:
        job_id = _swig_property(_pbs.preempt_job_info_job_id_get, _pbs.preempt_job_info_job_id_set)
    __swig_setmethods__["order"] = _pbs.preempt_job_info_order_set
    __swig_getmethods__["order"] = _pbs.preempt_job_info_order_get
    if _newclass:
        order = _swig_property(_pbs.preempt_job_info_order_get, _pbs.preempt_job_info_order_set)

    def __init__(self):
        this = _pbs.new_preempt_job_info()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pbs.delete_preempt_job_info
    __del__ = lambda self: None
preempt_job_info_swigregister = _pbs.preempt_job_info_swigregister
preempt_job_info_swigregister(preempt_job_info)

RESV_NONE = _pbs.RESV_NONE
RESV_UNCONFIRMED = _pbs.RESV_UNCONFIRMED
RESV_CONFIRMED = _pbs.RESV_CONFIRMED
RESV_WAIT = _pbs.RESV_WAIT
RESV_TIME_TO_RUN = _pbs.RESV_TIME_TO_RUN
RESV_RUNNING = _pbs.RESV_RUNNING
RESV_FINISHED = _pbs.RESV_FINISHED
RESV_BEING_DELETED = _pbs.RESV_BEING_DELETED
RESV_DELETED = _pbs.RESV_DELETED
RESV_DELETING_JOBS = _pbs.RESV_DELETING_JOBS
RESV_DEGRADED = _pbs.RESV_DEGRADED
RESV_BEING_ALTERED = _pbs.RESV_BEING_ALTERED
RESV_IN_CONFLICT = _pbs.RESV_IN_CONFLICT

def __pbs_errno_location():
    return _pbs.__pbs_errno_location()
__pbs_errno_location = _pbs.__pbs_errno_location

def __pbs_server_location():
    return _pbs.__pbs_server_location()
__pbs_server_location = _pbs.__pbs_server_location

def pbs_asyrunjob(arg1, arg2, arg3, arg4):
    return _pbs.pbs_asyrunjob(arg1, arg2, arg3, arg4)
pbs_asyrunjob = _pbs.pbs_asyrunjob

def pbs_alterjob(arg1, arg2, arg3, arg4):
    return _pbs.pbs_alterjob(arg1, arg2, arg3, arg4)
pbs_alterjob = _pbs.pbs_alterjob

def pbs_asyalterjob(c, jobid, attrib, extend):
    return _pbs.pbs_asyalterjob(c, jobid, attrib, extend)
pbs_asyalterjob = _pbs.pbs_asyalterjob

def pbs_confirmresv(arg1, arg2, arg3, arg4, arg5):
    return _pbs.pbs_confirmresv(arg1, arg2, arg3, arg4, arg5)
pbs_confirmresv = _pbs.pbs_confirmresv

def pbs_connect(arg1):
    return _pbs.pbs_connect(arg1)
pbs_connect = _pbs.pbs_connect

def pbs_connect_extend(arg1, arg2):
    return _pbs.pbs_connect_extend(arg1, arg2)
pbs_connect_extend = _pbs.pbs_connect_extend

def pbs_disconnect(arg1):
    return _pbs.pbs_disconnect(arg1)
pbs_disconnect = _pbs.pbs_disconnect

def pbs_manager(arg1, arg2, arg3, arg4, arg5, arg6):
    return _pbs.pbs_manager(arg1, arg2, arg3, arg4, arg5, arg6)
pbs_manager = _pbs.pbs_manager

def pbs_default():
    return _pbs.pbs_default()
pbs_default = _pbs.pbs_default

def pbs_deljob(arg1, arg2, arg3):
    return _pbs.pbs_deljob(arg1, arg2, arg3)
pbs_deljob = _pbs.pbs_deljob

def pbs_geterrmsg(arg1):
    return _pbs.pbs_geterrmsg(arg1)
pbs_geterrmsg = _pbs.pbs_geterrmsg

def pbs_holdjob(arg1, arg2, arg3, arg4):
    return _pbs.pbs_holdjob(arg1, arg2, arg3, arg4)
pbs_holdjob = _pbs.pbs_holdjob

def pbs_loadconf(arg1):
    return _pbs.pbs_loadconf(arg1)
pbs_loadconf = _pbs.pbs_loadconf

def pbs_locjob(arg1, arg2, arg3):
    return _pbs.pbs_locjob(arg1, arg2, arg3)
pbs_locjob = _pbs.pbs_locjob

def pbs_movejob(arg1, arg2, arg3, arg4):
    return _pbs.pbs_movejob(arg1, arg2, arg3, arg4)
pbs_movejob = _pbs.pbs_movejob

def pbs_msgjob(arg1, arg2, arg3, arg4, arg5):
    return _pbs.pbs_msgjob(arg1, arg2, arg3, arg4, arg5)
pbs_msgjob = _pbs.pbs_msgjob

def pbs_relnodesjob(arg1, arg2, arg3, arg4):
    return _pbs.pbs_relnodesjob(arg1, arg2, arg3, arg4)
pbs_relnodesjob = _pbs.pbs_relnodesjob

def pbs_orderjob(arg1, arg2, arg3, arg4):
    return _pbs.pbs_orderjob(arg1, arg2, arg3, arg4)
pbs_orderjob = _pbs.pbs_orderjob

def pbs_rerunjob(arg1, arg2, arg3):
    return _pbs.pbs_rerunjob(arg1, arg2, arg3)
pbs_rerunjob = _pbs.pbs_rerunjob

def pbs_rlsjob(arg1, arg2, arg3, arg4):
    return _pbs.pbs_rlsjob(arg1, arg2, arg3, arg4)
pbs_rlsjob = _pbs.pbs_rlsjob

def pbs_runjob(arg1, arg2, arg3, arg4):
    return _pbs.pbs_runjob(arg1, arg2, arg3, arg4)
pbs_runjob = _pbs.pbs_runjob

def pbs_selectjob(arg1, arg2, arg3):
    return _pbs.pbs_selectjob(arg1, arg2, arg3)
pbs_selectjob = _pbs.pbs_selectjob

def pbs_sigjob(arg1, arg2, arg3, arg4):
    return _pbs.pbs_sigjob(arg1, arg2, arg3, arg4)
pbs_sigjob = _pbs.pbs_sigjob

def pbs_statfree(arg1):
    return _pbs.pbs_statfree(arg1)
pbs_statfree = _pbs.pbs_statfree

def pbs_statrsc(arg1, arg2, arg3, arg4):
    return _pbs.pbs_statrsc(arg1, arg2, arg3, arg4)
pbs_statrsc = _pbs.pbs_statrsc

def pbs_statjob(arg1, arg2, arg3, arg4):
    return _pbs.pbs_statjob(arg1, arg2, arg3, arg4)
pbs_statjob = _pbs.pbs_statjob

def pbs_selstat(arg1, arg2, arg3, arg4):
    return _pbs.pbs_selstat(arg1, arg2, arg3, arg4)
pbs_selstat = _pbs.pbs_selstat

def pbs_statque(arg1, arg2, arg3, arg4):
    return _pbs.pbs_statque(arg1, arg2, arg3, arg4)
pbs_statque = _pbs.pbs_statque

def pbs_statserver(arg1, arg2, arg3):
    return _pbs.pbs_statserver(arg1, arg2, arg3)
pbs_statserver = _pbs.pbs_statserver

def pbs_statsched(arg1, arg2, arg3):
    return _pbs.pbs_statsched(arg1, arg2, arg3)
pbs_statsched = _pbs.pbs_statsched

def pbs_stathost(arg1, arg2, arg3, arg4):
    return _pbs.pbs_stathost(arg1, arg2, arg3, arg4)
pbs_stathost = _pbs.pbs_stathost

def pbs_statnode(arg1, arg2, arg3, arg4):
    return _pbs.pbs_statnode(arg1, arg2, arg3, arg4)
pbs_statnode = _pbs.pbs_statnode

def pbs_statvnode(arg1, arg2, arg3, arg4):
    return _pbs.pbs_statvnode(arg1, arg2, arg3, arg4)
pbs_statvnode = _pbs.pbs_statvnode

def pbs_statresv(arg1, arg2, arg3, arg4):
    return _pbs.pbs_statresv(arg1, arg2, arg3, arg4)
pbs_statresv = _pbs.pbs_statresv

def pbs_stathook(arg1, arg2, arg3, arg4):
    return _pbs.pbs_stathook(arg1, arg2, arg3, arg4)
pbs_stathook = _pbs.pbs_stathook

def pbs_get_attributes_in_error(arg1):
    return _pbs.pbs_get_attributes_in_error(arg1)
pbs_get_attributes_in_error = _pbs.pbs_get_attributes_in_error

def pbs_submit(arg1, arg2, arg3, arg4, arg5):
    return _pbs.pbs_submit(arg1, arg2, arg3, arg4, arg5)
pbs_submit = _pbs.pbs_submit

def pbs_submit_resv(arg1, arg2, arg3):
    return _pbs.pbs_submit_resv(arg1, arg2, arg3)
pbs_submit_resv = _pbs.pbs_submit_resv

def pbs_delresv(arg1, arg2, arg3):
    return _pbs.pbs_delresv(arg1, arg2, arg3)
pbs_delresv = _pbs.pbs_delresv

def pbs_terminate(arg1, arg2, arg3):
    return _pbs.pbs_terminate(arg1, arg2, arg3)
pbs_terminate = _pbs.pbs_terminate

def pbs_modify_resv(arg1, arg2, arg3, arg4):
    return _pbs.pbs_modify_resv(arg1, arg2, arg3, arg4)
pbs_modify_resv = _pbs.pbs_modify_resv

def pbs_preempt_jobs(arg1, arg2):
    return _pbs.pbs_preempt_jobs(arg1, arg2)
pbs_preempt_jobs = _pbs.pbs_preempt_jobs
# This file is compatible with both classic and new-style classes.

cvar = _pbs.cvar

